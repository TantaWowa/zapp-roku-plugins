namespace Applicaster.tests

  @tags("public", "analytics")
  @suite
  class AnalyticsEventFactoryTests extends tests.BaseTestSuite

    override function setup()
      m.analytics = new AnalyticsEventFactory()
      m.testItem = CreateObject("roSGNode", "GridContent")
      m.testItem.id = "12345"
      m.testItem.title = "Test Item"
      m.testItem.length = 120
      m.testItem.addField("free", "boolean", false)
      m.testItem.free = true
      m.testItem.itemType = "vod"

      m.testCategory = CreateObject("roSGNode", "ContentNode")
      m.testCategory.id = "54321"
      m.testCategory.title = "Test Category"
      m.testCategory.addField("nature", "string", false)
      m.testCategory.nature = "Season"

      m.testVoucher = {
        voucherType: "App"
        code: "Test Product"
      }
    end function

    '+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    @describe("tests booleanString")
    '+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

    @it("booleanString")
    function _()
      m.assertEqual(m.analytics.booleanString(true), "True")
      m.assertEqual(m.analytics.booleanString(false), "False")
    end function

    '+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    @describe("tests propertiesToLabel")
    '+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

    @it("AMT_propertiesToLabel")
    function _()
      properties = {}
      properties["Trigger"] = "A - B"
      properties["Free"] = "True"
      properties["Item ID"] = "12345"
      m.assertEqual(m.analytics.propertiesToLabel(properties), "Free=True;Item ID=12345;Trigger=A - B")
    end function

    @it("non string")
    function _()
      properties = {}
      properties["boolean"] = true
      'bs:disable-next-line
      properties["integer"] = 42%
      properties["longinteger"] = 2349823492&
      properties["float"] = 243.573!
      properties["double"] = 1.23456789D - 12#
      properties["string"] = "hi"
      properties["array"] = [1, 2, 3]
      properties["assocarray"] = { a: 1 }
      properties["invalid"] = invalid
      m.assertEqual(m.analytics.propertiesToLabel(properties), "array=;assocarray=;boolean=true;double=1.23457e-12;float=243.573;integer=42;invalid=;longinteger=2349823492;string=hi")
    end function

    '+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    @describe("tests padString")
    '+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

    @it("AMT_padString")
    function _()

      m.assertEqual(m.analytics.padString("9", 2, "0"), "09")
      m.assertEqual(m.analytics.padString("26", 2, "0"), "26")
      m.assertEqual(m.analytics.padString("", 2, "0"), "00")

    end function

    @it("empty")
    function _()

      m.assertEqual(m.analytics.padString("original ", 40, ""), "original")

    end function

    '+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    @describe("tests timeFormat")
    '+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

    @it("AMT_timeFormat")
    function _()

      m.assertEqual(m.analytics.timeFormat(0), "00:00:00")
      m.assertEqual(m.analytics.timeFormat(59), "00:00:59")
      m.assertEqual(m.analytics.timeFormat(60), "00:01:00")
      m.assertEqual(m.analytics.timeFormat(3599), "00:59:59")
      m.assertEqual(m.analytics.timeFormat(3600), "01:00:00")

    end function

    '+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    @describe("tests voucherDictionary")
    '+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

    @it("no grace period")
    function _()
      voucher = {}
      voucher.append(m.testVoucher)
      voucher["freeTrialType"] = "None"
      voucher["freeTrialQuantity"] = ""
      dictionary = m.analytics.voucherDictionary(false, voucher)
      m.assertEqual(dictionary["Grace Period"], "N/A")
    end function

    @it("monthly grace period")
    function _()
      voucher = {}
      voucher.append(m.testVoucher)
      voucher["freeTrialType"] = "Days"
      voucher["freeTrialQuantity"] = "7"
      dictionary = m.analytics.voucherDictionary(false, voucher)
      m.assertEqual(dictionary["Grace Period"], "7 Days")
    end function

    @it("daily grace period")
    function _()
      voucher = {}
      voucher.append(m.testVoucher)
      voucher["freeTrialType"] = "Months"
      voucher["freeTrialQuantity"] = "1"
      dictionary = m.analytics.voucherDictionary(false, voucher)
      m.assertEqual(dictionary["Grace Period"], "1 Months")
    end function

    '+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    @describe("tests itemDictionary")
    '+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

    @it("channelItemType")
    function _()
      dictionary = m.analytics.itemDictionary({ itemType: "channel" })
      m.assertEqual(dictionary["Item Type"], "Channel - Applicaster Model")
    end function

    @it("vod")
    function _()
      dictionary = m.analytics.itemDictionary({ itemType: "vod" })
      m.assertEqual(dictionary["Item Type"], "VOD - Applicaster Model")
    end function

    @it("atom")
    function _()
      dictionary = m.analytics.itemDictionary({ itemType: "atom" })
      m.assertEqual(dictionary["Item Type"], "VOD - ATOM")
    end function

    '+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    @describe("tests playVOD")
    '+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

    @it("AMT_playVOD")
    function _()
      event = m.analytics.playVOD("Test Case", m.testItem, 75)

      m.assertEqual(event.category, "Play VOD")
      m.assertEqual(event.action, "Play VOD")
      m.assertEqual(event.label, "ATOM feed name=N/A;Duration=00:02:00;Duration Played=00:01:15;Free=True;Item ID=12345;Item Name=Test Item;Item Type=VOD - Applicaster Model;Parent Category ID=N/A;Parent Category Name=N/A;Path To=Test Case;Percent Complete=62;Season ID=N/A;Season Name=N/A;Show ID=N/A;Show Name=N/A;TLC ID=N/A;TLC Name=N/A")

    end function

    @it("invalid item")
    function _()
      event = m.analytics.playVOD("Test Case", invalid, 75)

      m.assertEqual(event.category, "Play VOD")
      m.assertEqual(event.action, "Play VOD")
      m.assertEqual(event.label, "ATOM feed name=N/A;Duration=Not Provided;Duration Played=00:01:15;Free=False;Item ID=N/A;Item Name=N/A;Item Type=N/A;Parent Category ID=N/A;Parent Category Name=N/A;Path To=Test Case;Percent Complete=0;Season ID=N/A;Season Name=N/A;Show ID=N/A;Show Name=N/A;TLC ID=N/A;TLC Name=N/A")

    end function

    '+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    @describe("tests clickItem")
    '+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

    @it("AMT_clickItem")
    function _()
      event = m.analytics.clickItem("Test Case", m.testItem)

      m.assertEqual(event.category, "Click Item")
      m.assertEqual(event.action, "Click Item")
      m.assertEqual(event.label, "ATOM feed name=N/A;Free=True;Item ID=12345;Item Name=Test Item;Item Type=VOD - Applicaster Model;Parent Category ID=N/A;Parent Category Name=N/A;Path To=Test Case;Season ID=N/A;Season Name=N/A;Show ID=N/A;Show Name=N/A;TLC ID=N/A;TLC Name=N/A")

    end function

    @it("invalid item")
    function _()
      event = m.analytics.clickItem("Test Case", invalid)

      m.assertEqual(event.category, "Click Item")
      m.assertEqual(event.action, "Click Item")
      m.assertEqual(event.label, "ATOM feed name=N/A;Free=False;Item ID=N/A;Item Name=N/A;Item Type=N/A;Parent Category ID=N/A;Parent Category Name=N/A;Path To=Test Case;Season ID=N/A;Season Name=N/A;Show ID=N/A;Show Name=N/A;TLC ID=N/A;TLC Name=N/A")

    end function

    '+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    @describe("tests clickCategory")
    '+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

    @it("AMT_clickCategory")
    function _()
      event = m.analytics.clickCategory("Test Case", m.testCategory)

      m.assertEqual(event.category, "Click Category")
      m.assertEqual(event.action, "Click Category")
      m.assertEqual(event.label, "Category ID=54321;Category Name=Test Category;Category Type=Season;Path To=Test Case")

    end function

    @it("invalid category")
    function _()
      event = m.analytics.clickCategory("Test Case", invalid)

      m.assertEqual(event.category, "Click Category")
      m.assertEqual(event.action, "Click Category")
      m.assertEqual(event.label, "Category ID=N/A;Category Name=N/A;Category Type=N/A;Path To=Test Case")

    end function

    '+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    @describe("tests launchApp")
    '+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

    @it("AMT_launchApp")
    function _()
      event = m.analytics.launchApp()

      m.assertEqual(event.category, "Launch App")
      m.assertEqual(event.action, "Launch App")
      m.assertEqual(event.label, "")

    end function

    '+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    @describe("tests viewStoreFront")
    '+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

    @it("AMT_viewStorefront")
    function _()
      event = m.analytics.viewStoreFront("Test Case", m.testItem, "Authorization")

      m.assertEqual(event.category, "View Storefront")
      m.assertEqual(event.action, "View Storefront")
      m.assertEqual(event.label, "Action=Authorization;ATOM feed name=N/A;Free=True;Item ID=12345;Item Name=Test Item;Item Type=VOD - Applicaster Model;Parent Category ID=N/A;Parent Category Name=N/A;Path To=Test Case;Season ID=N/A;Season Name=N/A;Show ID=N/A;Show Name=N/A;TLC ID=N/A;TLC Name=N/A")

    end function

    @it("invalid item")
    function _()
      event = m.analytics.viewStoreFront("Test Case", invalid, "Authorization")

      m.assertEqual(event.category, "View Storefront")
      m.assertEqual(event.action, "View Storefront")
      m.assertEqual(event.label, "Action=Authorization;ATOM feed name=N/A;Free=False;Item ID=N/A;Item Name=N/A;Item Type=N/A;Parent Category ID=N/A;Parent Category Name=N/A;Path To=Test Case;Season ID=N/A;Season Name=N/A;Show ID=N/A;Show Name=N/A;TLC ID=N/A;TLC Name=N/A")

    end function

    '+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    @describe("tests tapStoreFrontButton")
    '+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

    @it("AMT_tapStorefrontButton")
    function _()
      event = m.analytics.tapStorefrontButton("Purchase Button", m.testItem)

      m.assertEqual(event.category, "Tap Storefront Button")
      m.assertEqual(event.action, "Tap Storefront Button")
      m.assertEqual(event.label, "ATOM feed name=N/A;Button Name=Purchase Button;Free=True;Item ID=12345;Item Name=Test Item;Item Type=VOD - Applicaster Model;Parent Category ID=N/A;Parent Category Name=N/A;Season ID=N/A;Season Name=N/A;Show ID=N/A;Show Name=N/A;TLC ID=N/A;TLC Name=N/A")

    end function

    @it("invalid item")
    function _()
      event = m.analytics.tapStorefrontButton("Purchase Button", invalid)

      m.assertEqual(event.category, "Tap Storefront Button")
      m.assertEqual(event.action, "Tap Storefront Button")
      m.assertEqual(event.label, "ATOM feed name=N/A;Button Name=Purchase Button;Free=False;Item ID=N/A;Item Name=N/A;Item Type=N/A;Parent Category ID=N/A;Parent Category Name=N/A;Season ID=N/A;Season Name=N/A;Show ID=N/A;Show Name=N/A;TLC ID=N/A;TLC Name=N/A")

    end function

    '+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    @describe("tests startPurchase")
    '+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

    @it("AMT_startPurchase")
    function _()
      event = m.analytics.startPurchase(false, m.testVoucher)

      m.assertEqual(event.category, "Start Purchase")
      m.assertEqual(event.action, "Start Purchase")
      m.assertEqual(event.label, "Grace Period=N/A;Permitted Countries=N/A;Price=N/A;Product ID=Test Product;Purchase Entity=N/A;Subscriber=No;Subscription Duration=N/A;Transaction ID=N/A;Trial Period=N/A;Voucher Name=N/A;Voucher Template Type=App")

    end function

    @it("invalid voucher")
    function _()
      event = m.analytics.startPurchase(false, invalid)

      m.assertEqual(event.category, "Start Purchase")
      m.assertEqual(event.action, "Start Purchase")
      m.assertEqual(event.label, "Grace Period=N/A;Permitted Countries=N/A;Price=N/A;Product ID=N/A;Purchase Entity=N/A;Subscriber=No;Subscription Duration=N/A;Transaction ID=N/A;Trial Period=N/A;Voucher Name=N/A;Voucher Template Type=N/A")

    end function

    '+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    @describe("tests completePurchase")
    '+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

    @it("AMT_completePurchase")
    function _()
      event = m.analytics.completePurchase(false, m.testVoucher)

      m.assertEqual(event.category, "Complete Purchase")
      m.assertEqual(event.action, "Complete Purchase")
      m.assertEqual(event.label, "Grace Period=N/A;Permitted Countries=N/A;Price=N/A;Product ID=Test Product;Purchase Entity=N/A;Subscriber=No;Subscription Duration=N/A;Transaction ID=N/A;Trial Period=N/A;Voucher Name=N/A;Voucher Template Type=App")

    end function

    @it("invalid voucher")
    function _()
      event = m.analytics.completePurchase(false, invalid)

      m.assertEqual(event.category, "Complete Purchase")
      m.assertEqual(event.action, "Complete Purchase")
      m.assertEqual(event.label, "Grace Period=N/A;Permitted Countries=N/A;Price=N/A;Product ID=N/A;Purchase Entity=N/A;Subscriber=No;Subscription Duration=N/A;Transaction ID=N/A;Trial Period=N/A;Voucher Name=N/A;Voucher Template Type=N/A")

    end function

    '+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    @describe("tests canclePurchase")
    '+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

    @it("AMT_cancelPurchase")
    function _()
      event = m.analytics.cancelPurchase(false, m.testVoucher)

      m.assertEqual(event.category, "Cancel Purchase")
      m.assertEqual(event.action, "Cancel Purchase")
      m.assertEqual(event.label, "Grace Period=N/A;Permitted Countries=N/A;Price=N/A;Product ID=Test Product;Purchase Entity=N/A;Subscriber=No;Subscription Duration=N/A;Transaction ID=N/A;Trial Period=N/A;Voucher Name=N/A;Voucher Template Type=App")

    end function

    @it("invalid voucher")
    function _()
      event = m.analytics.cancelPurchase(false, invalid)

      m.assertEqual(event.category, "Cancel Purchase")
      m.assertEqual(event.action, "Cancel Purchase")
      m.assertEqual(event.label, "Grace Period=N/A;Permitted Countries=N/A;Price=N/A;Product ID=N/A;Purchase Entity=N/A;Subscriber=No;Subscription Duration=N/A;Transaction ID=N/A;Trial Period=N/A;Voucher Name=N/A;Voucher Template Type=N/A")

    end function

    '+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    @describe("tests purchaseError")
    '+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

    @it("AMT_purchaseError")
    function _()
      event = m.analytics.purchaseError("A125", "Payment Method Declined", false, m.testVoucher)

      m.assertEqual(event.category, "Receive Error in Purchase Process")
      m.assertEqual(event.action, "Receive Error in Purchase Process")
      m.assertEqual(event.label, "Error Code ID=A125;Error Message=Payment Method Declined;Grace Period=N/A;Permitted Countries=N/A;Price=N/A;Product ID=Test Product;Purchase Entity=N/A;Subscriber=No;Subscription Duration=N/A;Transaction ID=N/A;Trial Period=N/A;Voucher Name=N/A;Voucher Template Type=App")

    end function

    @it("invalid voucher")
    function _()
      event = m.analytics.purchaseError("A125", "Payment Method Declined", false, invalid)

      m.assertEqual(event.category, "Receive Error in Purchase Process")
      m.assertEqual(event.action, "Receive Error in Purchase Process")
      m.assertEqual(event.label, "Error Code ID=A125;Error Message=Payment Method Declined;Grace Period=N/A;Permitted Countries=N/A;Price=N/A;Product ID=N/A;Purchase Entity=N/A;Subscriber=No;Subscription Duration=N/A;Transaction ID=N/A;Trial Period=N/A;Voucher Name=N/A;Voucher Template Type=N/A")

    end function

    '+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    @describe("tests openMenu")
    '+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

    @it("AMT_openMenu")
    function _()
      event = m.analytics.openMenu()

      m.assertEqual(event.category, "Menu")
      m.assertEqual(event.action, "Open Menu")
      m.assertEqual(event.label, "")

    end function

    '+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    @describe("tests openSearch")
    '+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

    @it("AMT_openSearch")
    function _()
      event = m.analytics.openSearch()

      m.assertEqual(event.category, "Menu")
      m.assertEqual(event.action, "Open Search")
      m.assertEqual(event.label, "")

    end function

    '+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    @describe("tests clickSearchResults")
    '+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

    @it("AMT_clickSearchResults")
    function _()
      event = m.analytics.clickSearchResults("be", "beaches")

      m.assertEqual(event.category, "Menu")
      m.assertEqual(event.action, "Click Search Results")
      m.assertEqual(event.label, "Searched string=be;Show Name=beaches")

    end function

    '+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    @describe("tests selectMenuItem")
    '+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

    @it("AMT_selectMenuItem")
    function _()
      event = m.analytics.selectMenuItem("About")

      m.assertEqual(event.category, "Menu")
      m.assertEqual(event.action, "Select Menu Item")
      m.assertEqual(event.label, "Selected Menu Item=About")

    end function

    '+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    @describe("tests pauseVOD")
    '+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

    @it("AMT_pauseVOD")
    function _()
      event = m.analytics.pauseVOD(m.testItem, 125)

      m.assertEqual(event.category, "Pause VOD")
      m.assertEqual(event.action, "Pause VOD")
      m.assertEqual(event.label, "ATOM feed name=N/A;Free=True;Item ID=12345;Item Name=Test Item;Item Type=VOD - Applicaster Model;Parent Category ID=N/A;Parent Category Name=N/A;Pause Timecode=00:02:05;Season ID=N/A;Season Name=N/A;Show ID=N/A;Show Name=N/A;TLC ID=N/A;TLC Name=N/A;Video Duration=00:02:00")

    end function

    @it("invalid item")
    function _()
      event = m.analytics.pauseVOD(invalid, 125)

      m.assertEqual(event.category, "Pause VOD")
      m.assertEqual(event.action, "Pause VOD")
      m.assertEqual(event.label, "ATOM feed name=N/A;Free=False;Item ID=N/A;Item Name=N/A;Item Type=N/A;Parent Category ID=N/A;Parent Category Name=N/A;Pause Timecode=00:02:05;Season ID=N/A;Season Name=N/A;Show ID=N/A;Show Name=N/A;TLC ID=N/A;TLC Name=N/A;Video Duration=00:00:00")

    end function

    '+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    @describe("tests unpauseVOD")
    '+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

    @it("AMT_unpauseVOD")
    function _()
      event = m.analytics.unpauseVOD(m.testItem, 125)

      m.assertEqual(event.category, "Unpause VOD")
      m.assertEqual(event.action, "Unpause VOD")
      m.assertEqual(event.label, "ATOM feed name=N/A;Free=True;Item ID=12345;Item Name=Test Item;Item Type=VOD - Applicaster Model;Parent Category ID=N/A;Parent Category Name=N/A;Season ID=N/A;Season Name=N/A;Show ID=N/A;Show Name=N/A;TLC ID=N/A;TLC Name=N/A;Unpause Timecode=00:02:05;Video Duration=00:02:00")

    end function

    @it("invalid item")
    function _()
      event = m.analytics.unpauseVOD(invalid, 125)

      m.assertEqual(event.category, "Unpause VOD")
      m.assertEqual(event.action, "Unpause VOD")
      m.assertEqual(event.label, "ATOM feed name=N/A;Free=False;Item ID=N/A;Item Name=N/A;Item Type=N/A;Parent Category ID=N/A;Parent Category Name=N/A;Season ID=N/A;Season Name=N/A;Show ID=N/A;Show Name=N/A;TLC ID=N/A;TLC Name=N/A;Unpause Timecode=00:02:05;Video Duration=00:00:00")

    end function

    '+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    @describe("tests startLogin")
    '+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

    @it("startLogin")
    function _()
      event = m.analytics.startLogin("Test Case", "username")

      m.assertEqual(event.category, "Start Login")
      m.assertEqual(event.action, "Start Login")
      m.assertEqual(event.label, "Login Name=username;Optional Fields=;Path To=Test Case;Required Fields=Username|Password")

    end function

    '+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    @describe("tests login succeeds")
    '+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

    @it("loginSucceeds")
    function _()
      event = m.analytics.loginSucceeds("Test Case", "username")

      m.assertEqual(event.category, "Login Succeeds")
      m.assertEqual(event.action, "Login Succeeds")
      m.assertEqual(event.label, "Login Name=username;Optional Fields=;Path To=Test Case;Required Fields=User Name|Password")

    end function

    '+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    @describe("tests loginDoesNotSucceed")
    '+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

    @it("loginDoesNotSucceed")
    function _()
      event = m.analytics.loginDoesNotSucceed("Test Case", "username", "Error Returned", "Invald username or password")

      m.assertEqual(event.category, "Login Does Not Succeed")
      m.assertEqual(event.action, "Login Does Not Succeed")
      m.assertEqual(event.label, "Error Message=Invald username or password;Login Name=username;Optional Fields=;Path To=Test Case;Reason=Error Returned;Required Fields=User Name|Password")

    end function

  end class
end namespace