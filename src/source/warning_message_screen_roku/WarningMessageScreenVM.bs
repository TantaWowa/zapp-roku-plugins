import "pkg:/source/UIBuilder/view/ZUIBScreenVM.bs"
import "pkg:/source/lib/ViewUtils.bs"

namespace WMSVM
class WarningMessageScreenVM extends ZUIBScreenVM

'styles
public isContentGroupVisible = false
public titleText = ""
public descriptionText = ""
public extraText = ""
public isShowingLoadingIndicator = true

private warningEntryIndex = 2
private warningEntryDepth = 1
private conditionPath = ""
private conditionValue = ""
private warningType = "entry"

public function new(riversJson)
  m.super(riversJson, "WarningMessageScreenVM")
  
  m.focusId = "usernameInput"
  styles = riversJson.styles

  m.conditionPath = styles.condition_path
  m.conditionValue = styles.condition_value
  m.warningType = MU.getContentField(styles, "warning_type", "entry")
  m.warningEntryIndex = ViewUtils.getUIBInt(styles, "entry_index", 2)
  m.warningEntryDepth = ViewUtils.getUIBInt(styles, "entry_depth", 1)
  
  m.setFocusId("doneButton")
end function



'+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
'++ Overridden
'+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

override public function createContent()
  m.logInfo("createContent is overridden in this screen")
end function

override public function load()
  isShowingWarning = false
  
  if m.originEntry <> invalid and MU.isString(m.conditionPath) and MU.isString(m.conditionValue) 
    value = MU.getContentField(m.originEntry, m.conditionPath, invalid)
    
    if MU.isString(value) and value = m.conditionValue
      m.logInfo("this content has a value that matches the locking condition")
      isShowingWarning = true

      if m.warningType = "entry"
        m.logInfo("loading entry to display")
        m.super()
      else
        m.logInfo("showig static message")
        m.showGenericErrorMessage()
      end if
    end if
    
  end if
  
  if not isShowingWarning
    m.logInfo("this content does NOT match the locking condition continuing with flow")
    m.dismiss("success")
  end if
  
  return true
end function

override public function onFeedResult(result)
  m.logMethod("onFeedResult")
  'now load the child with the entry that's going to display the message
  warningEntry = invalid
  
  if result.isOk and result.data.itemType <> "problemDetailsResponse" and result.data.getChildCount() > m.warningEntryIndex
    warningEntry = result.data.getChild(m.warningEntryIndex)
    if warningEntry <> invalid
      m.executeLoadItemTask(warningEntry.id, warningEntry, "onLoadedChildEntry", 0)
    end if
  end if
  
  if warningEntry = invalid
    m.showGenericErrorMessage()
  end if
end function

private function onLoadedChildEntry(result)
  m.logMethod("onLoadedChildEntry", result)
  
  messageEntry = invalid
  
  if result.isOk and result.data.itemType <> "problemDetailsResponse"
    messageEntry = MU.getChildAtDepth(result.data, m.warningEntryDepth)
  end if
  
  if messageEntry <> invalid
    m.showMessage(messageEntry)
  else
    m.showGenericErrorMessage()
  end if
end function

private function showGenericErrorMessage()
  m.setField("isShowingLoadingIndicator", false)
  
  'this is already showing by default
end function

private function showMessage(entry)
  m.setField("isContentGroupVisible", true)
  m.setField("isShowingLoadingIndicator", false)
  
  titleText = MU.getContentField(entry, "title", "")
  
  if titleText = ""
    titleText = "This content cannot be displayed"
  end if
  
  m.setField("titleText", titleText)
  
  m.setField("descriptionText", MU.getContentField(entry, "description", ""))
  m.setField("extraText", MU.getContentField(entry, "extensions.extra_text", ""))
end function
'+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
'++ callbacks
'+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

public function onDoneButtonSelected(value)
  m.logMethod("onDoneButtonSelected")
  m.dismiss("cancel")
end function

'+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
'++ Key Handling
'+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

public function isCapturingAnyKeyPress(key, press)
  'do not anyone escape this screen!
  return true
end function

public function onKeyPressBack() as boolean
  m.dismiss("cancel")
  return true
end function

override public function onKeyPressUp() as boolean
  return true
end function

end class
end namespace